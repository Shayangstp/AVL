color name convertor : 

import React from 'react';

const hexToColorName = (hexValue) => {
  // Remove the '#' symbol if present
  hexValue = hexValue.replace('#', '');

  // Convert the hex value to RGB
  const r = parseInt(hexValue.substr(0, 2), 16);
  const g = parseInt(hexValue.substr(2, 2), 16);
  const b = parseInt(hexValue.substr(4, 2), 16);

  // Define a dictionary of basic color names and their corresponding RGB values
  const colorNames = {
    Black: [0, 0, 0],
    White: [255, 255, 255],
    Red: [255, 0, 0],
    Green: [0, 128, 0],
    Blue: [0, 0, 255],
    Yellow: [255, 255, 0],
    Cyan: [0, 255, 255],
    Magenta: [255, 0, 255],
  };

  // Calculate the Euclidean distance between the input RGB values and the color dictionary
  let minDistance = Infinity;
  let closestColor = null;

  for (const colorName in colorNames) {
    const rgbValues = colorNames[colorName];
    const distance = Math.sqrt(
      Math.pow(r - rgbValues[0], 2) +
        Math.pow(g - rgbValues[1], 2) +
        Math.pow(b - rgbValues[2], 2)
    );

    if (distance < minDistance) {
      minDistance = distance;
      closestColor = colorName;
    }
  }

  return closestColor;
};

const ColorNameConverter = () => {
  const [hexValue, setHexValue] = React.useState('');
  const [colorName, setColorName] = React.useState('');

  const handleHexValueChange = (event) => {
    setHexValue(event.target.value);
  };

  const handleConvertClick = () => {
    const convertedColorName = hexToColorName(hexValue);
    setColorName(convertedColorName);
  };

  return (
    <div>
      <input type="text" value={hexValue} onChange={handleHexValueChange} />
      <button onClick={handleConvertClick}>Convert</button>
      {colorName && <p>Color Name: {colorName}</p>}
    </div>
  );
};

export default ColorNameConverter;